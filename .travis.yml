language: cpp

dist: trusty

# https://docs.travis-ci.com/user/languages/cpp/
matrix:
  include:
    #
    # Mac
    #
    - os: osx
      compiler: clang
      env:
        - MATRIX_EVAL="brew update"
        - CLANG_FORMAT=clang-format
    #
    # Linux GCC 5
    #
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0
          packages:
            - g++-5
            - clang-format-6.0
      env:
        - QT=59 PPA=beineri/opt-qt596-trusty MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
        - CLANG_FORMAT=clang-format-6.0
    #
    # Linux GCC 6
    #
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0
          packages:
            - g++-6
            - clang-format-6.0
      env:
        - QT=59 PPA=beineri/opt-qt596-trusty MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
        - CLANG_FORMAT=clang-format-6.0
    #
    # Linux GCC 7
    #
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0
          packages:
            - g++-7
            - clang-format-6.0
      env:
        - QT=59 PPA=beineri/opt-qt596-trusty MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
        - CLANG_FORMAT=clang-format-6.0
    #
    # Linux GCC 8
    #
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0
          packages:
            - g++-8
            - clang-format-6.0
      env:
        - QT=59 PPA=beineri/opt-qt596-trusty MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
        - CLANG_FORMAT=clang-format-6.0

before_install:
  - eval "${MATRIX_EVAL}"
  - '[[ "$TRAVIS_OS_NAME" != linux || -z "$PPA" ]] || sudo add-apt-repository -y ppa:$PPA'
  - '[ "$TRAVIS_OS_NAME" != linux ] || sudo apt-get -qy update'

install:
  - '[ "$TRAVIS_OS_NAME" != linux ] || sudo apt-get -qy install cmake libminiupnpc-dev lcov'
  - '[[ "$TRAVIS_OS_NAME" != linux || "$PPA" != */opt-* ]] || sudo apt-get -qy install qt${QT}base'
  - '[[ "$TRAVIS_OS_NAME" != linux || "$PPA" == */opt-* ]] || sudo apt-get -qy install qt5-qmake qtbase5-dev'
  - '[ "$TRAVIS_OS_NAME" != osx ] || brew install qt5 clang-format miniupnpc lcov'
  - '[ "$TRAVIS_OS_NAME" != osx ] || brew upgrade openssl@1.1'
  - '[ "$TRAVIS_OS_NAME" != osx ] || brew link --force qt5'
  - '[ "$TRAVIS_OS_NAME" != osx ] || export PATH=/usr/local/opt/qt5/bin:$PATH'
  - qmake -v

before_script:
  # Linux
  - '[[ "$TRAVIS_OS_NAME" != linux || "$CXX" != clang++ ]] || export QMAKESPEC=linux-clang'
  - '[[ "$TRAVIS_OS_NAME" != linux || "$CXX" != g++     ]] || export QMAKESPEC=linux-g++'
  - '[[ "$TRAVIS_OS_NAME" != linux || "$PPA" != */opt-* ]] || . /opt/qt$QT/bin/qt$QT-env.sh'
  - '[[ "$TRAVIS_OS_NAME" != linux || "$PPA" == */opt-* ]] || export QT_SELECT=qt5'
  # Mac
  - '[[ "$TRAVIS_OS_NAME" != osx   || "$CXX" != clang++ ]] || export QMAKESPEC=macx-clang'
  - '[[ "$TRAVIS_OS_NAME" != osx   || "$CXX" != g++     ]] || export QMAKESPEC=macx-g++'
  - '[ "$TRAVIS_OS_NAME" != osx ] || export MMAPPER_CMAKE_EXTRA=-DOPENSSL_ROOT_DIR=/usr/local/opt/openssl@1.1'
  # Code style check
  - $CLANG_FORMAT -version
  - find . -type f -name *.cpp -o -name *.h -exec $CLANG_FORMAT -style=file -i {} \;
  - |
    if  [[ -n $(git diff) ]]; then
      echo
      git diff
      echo
      echo "Please fix your code style:"
      echo "find . -type f -name *.cpp -o -name *.h -exec clang-format -i -style=file {} \;"
      [[ $(git diff --stat | wc -l) -lt 5 ]] || exit -1
    fi
  # Prepare Makefile
  - mkdir build
  - cd build
  - cmake --version
  - cmake .. $MMAPPER_CMAKE_EXTRA -DUSE_CODE_COVERAGE=true

script:
  - make -j2

after_success:
  - lcov  --zerocounters  --directory .
  - ctest -V
  - lcov --remove coverage.info '/usr/*' "${HOME}"'/.cache/*' --output-file coverage.info
  - lcov --directory . --capture --output-file coverage.info
  - lcov --list coverage.info
  - bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"
  - cpack
